apiVersion: apps/v1
kind: Deployment
metadata:
  name: DEPLOYMENT_NAME_PLACEHOLDER
  namespace: NAMESPACE_PLACEHOLDER
  labels:
    app: REPO_NAME_PLACEHOLDER
spec:
  replicas: 1
  selector:
    matchLabels:
      app: REPO_NAME_PLACEHOLDER
  template:
    metadata:
      labels:
        app: REPO_NAME_PLACEHOLDER
    spec:
      containers:
      - name: REPO_NAME_PLACEHOLDER
        image: IMAGE_NAME_PLACEHOLDER
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
          - |
            # Try to find and run the application
            echo "üîç Looking for application entrypoint..."
            
            # Check common locations for server.js or main application files
            if [ -f "/usr/local/app/server.js" ]; then
              echo "‚úÖ Found server.js in /usr/local/app/"
              cd /usr/local/app && node server.js
            elif [ -f "/usr/local/app/result/server.js" ]; then
              echo "‚úÖ Found server.js in /usr/local/app/result/"
              cd /usr/local/app/result && node server.js
            elif [ -f "/usr/local/app/vote/app.py" ]; then
              echo "‚úÖ Found app.py in /usr/local/app/vote/"
              cd /usr/local/app/vote && python3 app.py
            else
              echo "‚ö†Ô∏è No standard application found, listing directory contents:"
              find /usr/local/app -name "*.js" -o -name "*.py" -o -name "*.jar" | head -10
              echo "üìÅ Directory structure:"
              ls -la /usr/local/app/ || echo "Cannot list /usr/local/app/"
              echo "üîÑ Starting a simple HTTP server as fallback..."
              # Create a simple status page and serve it
              mkdir -p /tmp/web
              echo '<!DOCTYPE html><html><head><title>Pipeline Deployment</title></head><body style="font-family: Arial; text-align: center; padding: 50px;"><h1>üöÄ Pipeline Deployment Active</h1><p>Repository: REPO_NAME_PLACEHOLDER</p><p>Pipeline Run: #RUN_NUMBER_PLACEHOLDER</p><p>Status: Application files found but entrypoint needs adjustment</p><p><a href="REPO_URL_PLACEHOLDER">View Repository</a></p></body></html>' > /tmp/web/index.html
              cd /tmp/web && npx -y http-server -p 80
            fi
        ports:
        - containerPort: 3000
        - containerPort: 8080
        - containerPort: 80
        env:
        - name: REPO_NAME
          value: "REPO_NAME_PLACEHOLDER"
        - name: REPO_URL
          value: "REPO_URL_PLACEHOLDER"
        - name: PIPELINE_RUN
          value: "RUN_NUMBER_PLACEHOLDER"
---
apiVersion: v1
kind: Service
metadata:
  name: SERVICE_NAME_PLACEHOLDER
  namespace: NAMESPACE_PLACEHOLDER
  labels:
    app: REPO_NAME_PLACEHOLDER
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 3000
    nodePort: NODE_PORT_PLACEHOLDER
  selector:
    app: REPO_NAME_PLACEHOLDER
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: INGRESS_NAME_PLACEHOLDER
  namespace: NAMESPACE_PLACEHOLDER
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: HOST_NAME_PLACEHOLDER
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: SERVICE_NAME_PLACEHOLDER
            port:
              number: 80