# ===========================================================
# Complete Access Credentials for All Pipeline Services
# ===========================================================

# ===========================================================
# Harbor Registry Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: harbor-creds
  namespace: ml-pipeline
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJoYXJib3IuZXhhbXBsZS5jb20iOnsidXNlcm5hbWUiOiJhZG1pbiIsInBhc3N3b3JkIjoicGFzc3dvcmQiLCJhdXRoIjoiWVdSdGFXND0ifX19
---
apiVersion: v1
kind: Secret
metadata:
  name: harbor-creds
  namespace: ml-staging
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJoYXJib3IuZXhhbXBsZS5jb20iOnsidXNlcm5hbWUiOiJhZG1pbiIsInBhc3N3b3JkIjoicGFzc3dvcmQiLCJhdXRoIjoiWVdSdGFXND0ifX19
---
apiVersion: v1
kind: Secret
metadata:
  name: harbor-creds
  namespace: ml-production
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJoYXJib3IuZXhhbXBsZS5jb20iOnsidXNlcm5hbWUiOiJhZG1pbiIsInBhc3N3b3JkIjoicGFzc3dvcmQiLCJhdXRoIjoiWVdSdGFXND0ifX19

# ===========================================================
# SonarQube Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: sonar-token
  namespace: ml-pipeline
type: Opaque
stringData:
  token: "sqp_your_sonarqube_token_here"
  url: "https://sonarqube.example.com"
---
apiVersion: v1
kind: Secret
metadata:
  name: sonar-token
  namespace: ml-staging
type: Opaque
stringData:
  token: "sqp_your_sonarqube_token_here"
  url: "https://sonarqube.example.com"
---
apiVersion: v1
kind: Secret
metadata:
  name: sonar-token
  namespace: ml-production
type: Opaque
stringData:
  token: "sqp_your_sonarqube_token_here"
  url: "https://sonarqube.example.com"

# ===========================================================
# DefectDojo Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: defectdojo-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  url: "https://defectdojo.example.com"
  api_key: "your_defectdojo_api_key_here"
  username: "admin"
  password: "password"
---
apiVersion: v1
kind: Secret
metadata:
  name: defectdojo-creds
  namespace: ml-staging
type: Opaque
stringData:
  url: "https://defectdojo.example.com"
  api_key: "your_defectdojo_api_key_here"
  username: "admin"
  password: "password"
---
apiVersion: v1
kind: Secret
metadata:
  name: defectdojo-creds
  namespace: ml-production
type: Opaque
stringData:
  url: "https://defectdojo.example.com"
  api_key: "your_defectdojo_api_key_here"
  username: "admin"
  password: "password"

# ===========================================================
# Dependency Track Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: dependency-track-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  url: "https://dependency-track.example.com"
  api_key: "your_dependency_track_api_key_here"
  username: "admin"
  password: "password"
---
apiVersion: v1
kind: Secret
metadata:
  name: dependency-track-creds
  namespace: ml-staging
type: Opaque
stringData:
  url: "https://dependency-track.example.com"
  api_key: "your_dependency_track_api_key_here"
  username: "admin"
  password: "password"
---
apiVersion: v1
kind: Secret
metadata:
  name: dependency-track-creds
  namespace: ml-production
type: Opaque
stringData:
  url: "https://dependency-track.example.com"
  api_key: "your_dependency_track_api_key_here"
  username: "admin"
  password: "password"

# ===========================================================
# Jira Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: jira-credentials
  namespace: ml-pipeline
type: Opaque
stringData:
  url: "https://jira.example.com"
  username: "ml-pipeline@example.com"
  password: "your_jira_password_here"
  api_token: "your_jira_api_token_here"
---
apiVersion: v1
kind: Secret
metadata:
  name: jira-credentials
  namespace: ml-staging
type: Opaque
stringData:
  url: "https://jira.example.com"
  username: "ml-pipeline@example.com"
  password: "your_jira_password_here"
  api_token: "your_jira_api_token_here"
---
apiVersion: v1
kind: Secret
metadata:
  name: jira-credentials
  namespace: ml-production
type: Opaque
stringData:
  url: "https://jira.example.com"
  username: "ml-pipeline@example.com"
  password: "your_jira_password_here"
  api_token: "your_jira_api_token_here"

# ===========================================================
# Vault Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: vault-token
  namespace: ml-pipeline
type: Opaque
stringData:
  token: "your_vault_token_here"
  url: "https://vault.example.com"
  role_id: "your_vault_role_id_here"
  secret_id: "your_vault_secret_id_here"
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-token
  namespace: ml-staging
type: Opaque
stringData:
  token: "your_vault_token_here"
  url: "https://vault.example.com"
  role_id: "your_vault_role_id_here"
  secret_id: "your_vault_secret_id_here"
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-token
  namespace: ml-production
type: Opaque
stringData:
  token: "your_vault_token_here"
  url: "https://vault.example.com"
  role_id: "your_vault_role_id_here"
  secret_id: "your_vault_secret_id_here"

# ===========================================================
# Nexus Repository Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: nexus-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  url: "https://nexus.example.com"
  username: "admin"
  password: "admin123"
  api_key: "your_nexus_api_key_here"
---
apiVersion: v1
kind: Secret
metadata:
  name: nexus-creds
  namespace: ml-staging
type: Opaque
stringData:
  url: "https://nexus.example.com"
  username: "admin"
  password: "admin123"
  api_key: "your_nexus_api_key_here"
---
apiVersion: v1
kind: Secret
metadata:
  name: nexus-creds
  namespace: ml-production
type: Opaque
stringData:
  url: "https://nexus.example.com"
  username: "admin"
  password: "admin123"
  api_key: "your_nexus_api_key_here"

# ===========================================================
# Prometheus Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: prometheus-creds
  namespace: monitoring
type: Opaque
stringData:
  url: "https://prometheus.example.com"
  username: "admin"
  password: "admin123"
  api_key: "your_prometheus_api_key_here"
  bearer_token: "your_prometheus_bearer_token_here"

# ===========================================================
# Grafana Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: grafana-creds
  namespace: monitoring
type: Opaque
stringData:
  url: "https://grafana.example.com"
  admin_username: "admin"
  admin_password: "admin123"
  api_key: "your_grafana_api_key_here"
  oauth_client_id: "your_oauth_client_id_here"
  oauth_client_secret: "your_oauth_client_secret_here"

# ===========================================================
# OpenSearch Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: opensearch-creds
  namespace: monitoring
type: Opaque
stringData:
  url: "https://opensearch.example.com"
  username: "admin"
  password: "admin123"
  api_key: "your_opensearch_api_key_here"
  index: "ml-pipeline-logs"

# ===========================================================
# Slack Integration Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: slack-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  webhook_url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  bot_token: "xoxb-your-bot-token-here"
  channel: "#ml-pipeline"
  username: "ML Pipeline Bot"
---
apiVersion: v1
kind: Secret
metadata:
  name: slack-creds
  namespace: ml-staging
type: Opaque
stringData:
  webhook_url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  bot_token: "xoxb-your-bot-token-here"
  channel: "#ml-pipeline"
  username: "ML Pipeline Bot"
---
apiVersion: v1
kind: Secret
metadata:
  name: slack-creds
  namespace: ml-production
type: Opaque
stringData:
  webhook_url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  bot_token: "xoxb-your-bot-token-here"
  channel: "#ml-pipeline"
  username: "ML Pipeline Bot"

# ===========================================================
# Email SMTP Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: smtp-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  smtp_server: "smtp.example.com"
  smtp_port: "587"
  username: "ml-pipeline@example.com"
  password: "your_smtp_password_here"
  from_address: "ml-pipeline@example.com"
  to_addresses: "ml-team@example.com,devops@example.com"
---
apiVersion: v1
kind: Secret
metadata:
  name: smtp-creds
  namespace: ml-staging
type: Opaque
stringData:
  smtp_server: "smtp.example.com"
  smtp_port: "587"
  username: "ml-pipeline@example.com"
  password: "your_smtp_password_here"
  from_address: "ml-pipeline@example.com"
  to_addresses: "ml-team@example.com,devops@example.com"
---
apiVersion: v1
kind: Secret
metadata:
  name: smtp-creds
  namespace: ml-production
type: Opaque
stringData:
  smtp_server: "smtp.example.com"
  smtp_port: "587"
  username: "ml-pipeline@example.com"
  password: "your_smtp_password_here"
  from_address: "ml-pipeline@example.com"
  to_addresses: "ml-team@example.com,devops@example.com"

# ===========================================================
# Database Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: postgres-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  host: "postgres.example.com"
  port: "5432"
  database: "ml_pipeline"
  username: "ml_user"
  password: "ml_password_here"
  ssl_mode: "require"
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  host: "mysql.example.com"
  port: "3306"
  database: "ml_pipeline"
  username: "ml_user"
  password: "ml_password_here"
  ssl_mode: "required"

# ===========================================================
# Cloud Provider Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: aws-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  access_key_id: "AKIAIOSFODNN7EXAMPLE"
  secret_access_key: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
  region: "us-east-1"
  role_arn: "arn:aws:iam::123456789012:role/MLPipelineRole"
---
apiVersion: v1
kind: Secret
metadata:
  name: azure-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  tenant_id: "your-azure-tenant-id"
  client_id: "your-azure-client-id"
  client_secret: "your-azure-client-secret"
  subscription_id: "your-azure-subscription-id"
---
apiVersion: v1
kind: Secret
metadata:
  name: gcp-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  project_id: "your-gcp-project-id"
  service_account_key: "your-gcp-service-account-json-key"
  credentials_file: "/path/to/gcp-credentials.json"

# ===========================================================
# ML/AI Service Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: wandb-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  api_key: "your_wandb_api_key_here"
  project: "ml-pipeline-training"
  entity: "ml-team"
---
apiVersion: v1
kind: Secret
metadata:
  name: mlflow-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  tracking_uri: "https://mlflow.example.com"
  username: "admin"
  password: "admin123"
  api_key: "your_mlflow_api_key_here"
---
apiVersion: v1
kind: Secret
metadata:
  name: huggingface-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  api_token: "hf_your_huggingface_token_here"
  username: "your_huggingface_username"
  password: "your_huggingface_password"

# ===========================================================
# GitHub/GitLab Credentials
# ===========================================================
apiVersion: v1
kind: Secret
metadata:
  name: github-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  token: "ghp_your_github_token_here"
  username: "your_github_username"
  password: "your_github_password"
  webhook_secret: "your_webhook_secret_here"
---
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-creds
  namespace: ml-pipeline
type: Opaque
stringData:
  token: "glpat_your_gitlab_token_here"
  username: "your_gitlab_username"
  password: "your_gitlab_password"
  webhook_secret: "your_webhook_secret_here"
