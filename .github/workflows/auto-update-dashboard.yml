name: Auto Update Dashboard on Repo Change

on:
  push:
    paths:
      - 'repos-to-scan.yaml'

jobs:
  update-dashboard:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up SSH for server access
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
    - name: Update Dashboard on Server
      run: |
        echo "========================================="
        echo "Auto-updating dashboard on server"
        echo "========================================="
        
        # Copy the update script to server
        scp -o StrictHostKeyChecking=no update-dashboard-content.sh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/Pipeline/
        
        # Run the update script on server
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "cd ~/Pipeline && ./update-dashboard-content.sh"
        
        echo "âœ… Dashboard updated automatically on server!"
        
    - name: Create GitHub Issue for Dashboard Update
      if: always()
      run: |
        echo "Creating GitHub issue for dashboard update..."
        
        # Get repository info from repos-to-scan.yaml
        REPO_NAME=$(grep -A 20 "repositories:" repos-to-scan.yaml | grep "^\s*name:" | head -1 | sed 's/.*name: //' | tr -d ' ')
        REPO_URL=$(grep -A 20 "repositories:" repos-to-scan.yaml | grep "^\s*- url:" | head -1 | sed 's/.*url: //' | tr -d ' ')
        
        if [ -n "$REPO_NAME" ] && [ "$REPO_NAME" != "friendly-name" ]; then
          gh issue create \
            --title "ðŸ”„ Dashboard Updated for $REPO_NAME" \
            --body "## Dashboard Auto-Update
            
            **Repository:** $REPO_NAME
            **URL:** $REPO_URL
            **Updated:** $(date)
            
            The dashboard has been automatically updated to show data for the new repository.
            
            **Dashboard URL:** http://213.109.162.134:30102/d/current-repo/pipeline-dashboard-current-repository
            
            **What was updated:**
            - Repository name and URL
            - Scan time and duration  
            - Repository-specific vulnerabilities
            - Repository-specific TODOs
            - Repository-specific test failures
            - Pipeline execution logs
            
            This update was triggered automatically by changes to \`repos-to-scan.yaml\`." \
            --label "dashboard,auto-update"
        else
          echo "No valid repository found in repos-to-scan.yaml"
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
