apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ml-pipeline.fullname" . }}
  labels:
    {{- include "ml-pipeline.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ml-pipeline.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.vault.enabled }}
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "{{ .Values.vault.role }}"
        vault.hashicorp.com/agent-inject-secret-config: "{{ .Values.vault.secretPath }}"
        vault.hashicorp.com/agent-inject-template-config: |
          {{`{{ with secret "secret/application/ml-pipeline" -}}
          export DATABASE_URL="{{ .Data.data.database_url }}"
          export API_KEY="{{ .Data.data.api_key }}"
          {{- end }}`}}
        {{- end }}
      labels:
        {{- include "ml-pipeline.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ml-pipeline.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        {{- if .Values.vault.enabled }}
        - name: vault-agent
          image: "{{ .Values.vault.agent.image.repository }}:{{ .Values.vault.agent.image.tag }}"
          command:
            - vault
            - agent
            - -config=/vault/config/agent.hcl
          env:
            - name: VAULT_ADDR
              value: "{{ .Values.vault.address }}"
            - name: VAULT_ROLE
              value: "{{ .Values.vault.role }}"
          resources:
            {{- toYaml .Values.vault.agent.resources | nindent 12 }}
          volumeMounts:
            - name: vault-config
              mountPath: /vault/config
              readOnly: true
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.gpu.enabled }}
          {{- with .Values.gpu }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ENVIRONMENT
              value: "{{ .Values.environment.name }}"
            {{- if .Values.environment.configMap.enabled }}
            {{- with .Values.environment.configMap.data }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- end }}
          volumeMounts:
            - name: vault-secrets
              mountPath: /vault/secrets
              readOnly: true
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /app/data
            {{- end }}
      volumes:
        - name: vault-secrets
          emptyDir: {}
        {{- if .Values.vault.enabled }}
        - name: vault-config
          configMap:
            name: {{ include "ml-pipeline.fullname" . }}-vault-config
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "ml-pipeline.fullname" . }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.gpu.enabled }}
      {{- with .Values.gpu.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
